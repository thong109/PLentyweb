{#
    Shopping/index.twigに追記
    {{ include('@Stripe4/credit.twig', ignore_missing=true) }}
#}
{% if Order.Payment.getMethodClass == 'Plugin\\Stripe4\\Service\\Method\\CreditCard' %}
    <div class="ec-orderPayment">
        <div class="ec-rectHeading">
            <h2>クレジットカード情報</h2>
            <script src="https://js.stripe.com/v3/"></script>
            <div class="form-row" id="stripe-card-box">
                {% if app.user %}
                    <div id="stripe-card" class="form-group" style="width: 100%;">
                        <div id="card" class="form-control">
                            <!-- ここにクレジットカード番号入力欄が挿入される -->
                        </div>
                        <div class="ec-checkbox form-control">
                            {{ form_widget(form.stripe_saving_card) }}
                        </div>

                        {% if form.cards is defined and form.cards %}
                            <a href="javascript:void(0)" class="change-stripe-card">登録カードを使用する</a>
                        {% endif %}
                    </div>

                    {% if form.cards is defined and form.cards %}
                        <div id="{{ form.cards.vars.id }}" class="form-group">
                            <div class="ec-radio">
                                {% for card in form.cards %}
                                    <div style="display: block">
                                        {{ form_widget(card) }}
                                    </div>
                                {% endfor %}
                            </div>
                            <a href="javascript:void(0)" class="change-stripe-card">カード情報を入力する</a>
                        </div>
                    {% endif %}
                {% else %}
                    <div id="stripe-card" class="form-group">
                        <div id="card" class="form-control">
                            <!-- ここにクレジットカード番号入力欄が挿入される -->
                        </div>
                    </div>
                {% endif %}

                <!-- ここにエラーメッセージが表示される -->
                <div id="card-errors" class="text-danger small mb-lg-5" role="alert"></div>
                {{ form_widget(form.stripe_payment_method_id) }}
            </div>
        </div>
        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

        <script>
            $(function () {
                $(document).on('click', '#stripe-card-box .change-stripe-card', function () {
                    $('#stripe-card-box .form-control').toggle('slow');
                });
            });

            const stripe = Stripe('{{ stripe_public_key }}');
            const elements = stripe.elements();

            // スタイルのカスタマイズ
            const style = {
                base: {
                    color: '#32325d',
                    fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                    fontSmoothing: 'antialiased',
                    '::placeholder': {
                        color: '#aab7c4'
                    }
                },
                invalid: {
                    color: '#fa755a',
                    iconColor: '#fa755a'
                }
            };

            const form = document.getElementById('shopping-form');

            // クレジットカード情報入力欄の構築
            const card = elements.create('card', {style: style, hidePostalCode: true});
            card.mount("#card");

            // 入力変更時のリスナー
            // バリデーションメッセージを表示する
            card.addEventListener('change', function (event) {
                const displayError = document.getElementById('card-errors');
                if (event.error) {
                    displayError.textContent = event.error.message;
                } else {
                    displayError.textContent = '';
                }
            });

            window.addEventListener("load", stripeCheckoutHandler, false);

            function stripeCheckoutHandler(e) {
                const selector = '#shopping-form > div > div.ec-orderRole__summary > div > div.ec-totalBox__btn > button';
                const jsInitCheckTimer = setInterval(jsLoaded, 1000);

                function jsLoaded() {
                    if (document.querySelector(selector) != null) {
                        clearInterval(jsInitCheckTimer);
                    }
                    // submit時のリスナー
                    let button = document.querySelector(selector);
                    button.addEventListener('click', async (event) => {
                        event.preventDefault();

                        {% if app.user %}
                        const stripePaymentMethod = $('#{{ form.cards.vars.id }} input:checked').val();
                        if (stripePaymentMethod && $('#stripe-card:visible').length == 0) {
                            $('#{{ form.stripe_payment_method_id.vars.id }}').val(stripePaymentMethod);
                            form.submit();
                        } else {
                            await createStripePaymentMethod(card);
                        }
                        {% else %}
                            await createStripePaymentMethod(card);
                        {% endif %}

                    });
                }
            }

            async function createStripePaymentMethod(card) {
                return await stripe
                    .createPaymentMethod({
                        type: 'card',
                        card: card,
                        billing_details: {}
                    })
                    .then(async (result) => {
                        if (result.error) {
                            showStripeErrorMessage(result.error.message);
                        } else {
                            $('#{{ form.stripe_payment_method_id.vars.id }}').val(result.paymentMethod.id);
                            form.submit();
                        }
                    });
            }

            function showStripeErrorMessage(message) {
                const errorElement = document.getElementById('card-errors');
                errorElement.textContent = message;
                const overlay = document.querySelector('.bg-load-overlay');
                if (overlay) {
                    overlay.remove();
                }
            }
        </script>
    </div>
{% endif %}
